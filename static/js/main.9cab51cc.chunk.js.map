{"version":3,"sources":["components/styles/StyledVideoWrapped.js","components/styles/StyledVideo.js","components/Video.js","components/styles/StyledPlaylistHeader.js","components/styles/StyledJourney.js","components/PlaylistHeader.js","components/styles/StyledPlaylistItem.js","components/PlaylistItem.js","components/styles/StyledPlaylistItems.js","components/containers/PlaylistItems.js","components/styles/StyledNightMode.js","components/Nightmode.js","components/styles/StyledPlaylist.js","components/containers/Playlist.js","components/styles/StyledWbnPlayer.js","components/containers/WbnPlayer.js","components/styles/GlobalStyle.js","components/containers/App.js","serviceWorker.js","index.js"],"names":["StyledVideoWrapper","styled","div","_templateObject","StyledVideo","StyledVideo_templateObject","Video","_ref","active","autoplay","endCallback","progressCallback","react_default","a","createElement","styles_StyledVideo","StyledVideoWrapped","ReactPlayer_default","width","height","style","position","top","playing","controls","url","video","onEnded","onProgress","StyledPlaylistHeader","StyledPlaylistHeader_templateObject","StyledJourney","StyledJourney_templateObject","PlaylistHeader","total","styles_StyledPlaylistHeader","title","styles_StyledJourney","num","StyledPlaylistItem","StyledPlaylistItem_templateObject","props","theme","color","played","PlaylistItem","styles_StyledPlaylistItem","className","duration","StyledPlaylistItems","StyledPlaylistItems_templateObject","PlaylistItems","videos","styles_StyledPlaylistItems","map","components_PlaylistItem","key","id","StyledNightmode","StyledNightMode_templateObject","Nightmode","nightModeCallback","nightMode","StyledNightMode","type","checked","onChange","StyledPlaylist","StyledPlaylist_templateObject","Playlist","styles_StyledPlaylist","components_Nightmode","components_PlaylistHeader","length","containers_PlaylistItems","StyledWbnPlayer","StyledWbnPlayer_templateObject","bgcolor","border","bgcolorItem","bgcolorItemActive","bgcolorPlayed","borderPlayed","themeLight","WbnPlayer","match","history","location","JSON","parse","document","querySelector","value","_useState","useState","playlist","activeVideo","playlistId","_useState2","Object","slicedToArray","state","setState","useEffect","videoId","params","undefined","newActiveVideo","findIndex","prev","objectSpread","push","pathname","concat","styled_components_browser_esm","styles_StyledWbnPlayer","components_Video","containers_Playlist","prevState","GlobalStyle","createGlobalStyle","GlobalStyle_templateObject","App","react_router_dom","Fragment","react_router","exact","path","component","styles_GlobalStyle","Boolean","window","hostname","ReactDOM","render","containers_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9cab51cc.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst StyledVideoWrapper = styled.div`\r\n  width: 100%;\r\n  padding-bottom: 56.25%;\r\n  position: relative;\r\n`;\r\n\r\nexport default StyledVideoWrapper;\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledVideo = styled.div`\r\n  position: relative;\r\n  -webkit-box-flex: 2;\r\n  -ms-flex: 2 0 900px;\r\n  flex: 2 0 900px;\r\n\r\n  @media screen and (max-width: 1000px) {\r\n    width: 100%;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport default StyledVideo;","import React from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport StyledVideoWrapper from './styles/StyledVideoWrapped';\r\nimport StyledVideo from './styles/StyledVideo';\r\n\r\nconst Video = ({active, autoplay, endCallback, progressCallback}) => (\r\n    <StyledVideo>\r\n    \t<StyledVideoWrapper>\r\n    \t\t<ReactPlayer\r\n    \t\twidth=\"100%\"\r\n    \t\theight=\"100%\"\r\n    \t\tstyle={{ position: \"absolute\", top: \"0\"}}\r\n    \t\tplaying={autoplay}\r\n    \t\tcontrols={true}\r\n    \t\turl= {active.video}\r\n    \t\tonEnded={endCallback}\r\n    \t\tonProgress={progressCallback}\r\n    \t\t/>\r\n    \t</StyledVideoWrapper>\r\n    </StyledVideo>\r\n\r\n);\r\n\r\nexport default Video;","import styled from \"styled-components\";\r\n\r\nconst StyledPlaylistHeader = styled.div`\r\n  background: #696969;\r\n  font-family: \"Hind\", sans-serif;\r\n  font-weight: 800;\r\n  font-size: 1.6em;\r\n  color: #fff;\r\n  padding: 0 20px;\r\n  margin: 0 0 20px 0;\r\n  min-height: 80px;\r\n  display: -webkit-box;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport default StyledPlaylistHeader;","import styled from 'styled-components';\r\n\r\nconst StyledJourney = styled.div`\r\n\tbackgroud: #565656;\r\n\tfont-size: 0.8em;\r\n\tpadding: 2px 5px;\r\n\theight: 20px;\r\n\tdisplay: -webkit-box;\r\n\tdisplay: -ms-flexbox;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\talign-items: center;\r\n\tborder-radius: 5px;\r\n`;\r\n\r\nexport default StyledJourney;","import React from 'react';\r\nimport StyledPlaylistHeader from './styles/StyledPlaylistHeader'\r\nimport StyledJourney from './styles/StyledJourney'\r\n\r\nconst PlaylistHeader = ({ active, total }) => (\r\n    <StyledPlaylistHeader>\r\n        <p>{active.title}</p>\r\n        <StyledJourney>\r\n            {active.num} / {total}\r\n        </StyledJourney>\r\n    </StyledPlaylistHeader>\r\n\r\n);\r\n\r\nexport default PlaylistHeader;","import styled from \"styled-components\";\r\n\r\nconst StyledPlaylistItem = styled.div`\r\n  font-family: \"Hind\", sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  background: none;\r\n  border: ${props => (props.active ? \"2px dotted #696969\" : \"none\")};\r\n  font-size: 1.6em;\r\n  color: ${props => props.theme.color};\r\n  min-height: 50px;\r\n  padding: 10px 20px;\r\n  margin: 0 0 10px 0;\r\n  display: -webkit-box;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: ${props => (props.active ? \"5px\" : \"0\")};\r\n  cursor: pointer;\r\n  position: relative;\r\n\r\n  ::before {\r\n    display: ${props => (props.active || !props.played ? \"none\" : \"block\")};\r\n    content: \"\";\r\n    width: 10px;\r\n    min-height: 10px;\r\n    background: #409f4e;\r\n    border-radius: 50px;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 19px;\r\n  }\r\n\r\n  .wbn-player__video-nr {\r\n    flex-grow: 1; /* default 0 */\r\n    max-width: 30px;\r\n    padding-right: 20px;\r\n    border-right: 2px solid #565656;\r\n  }\r\n\r\n  .wbn-player__video-name,\r\n  .wbn-player__video-name a {\r\n    flex-grow: 10; /* default 0 */\r\n    padding: 0 0 0 10px;\r\n    color: ${props => props.theme.color};\r\n    text-align: left;\r\n    text-decoration: none;\r\n    display: block;\r\n  }\r\n\r\n  .wbn-player__video-time {\r\n    background: #565656;\r\n    min-width: 45px;\r\n    color: #fff;\r\n    font-size: 0.8em;\r\n    padding: 0px 5px;\r\n    height: 20px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    margin: 0 0 0 5px;\r\n  }\r\n\r\n  .wbn-player__video-download {\r\n    flex-grow: 1; /* default 0 */\r\n    color: ${props => (props.played ? \"#fff\" : props.theme.color)};\r\n    margin: 0 0 0 20px;\r\n    max-width: 30px;\r\n    padding: 0 20px;\r\n    border-left: 2px solid #565656;\r\n    font-family: \"fontello\";\r\n    font-style: normal;\r\n    font-weight: normal;\r\n  }\r\n\r\n  .wbn-player__video-download a {\r\n    color: ${props =>\r\n      props.played && !props.active ? \"#fff\" : props.theme.color};\r\n  }\r\n\r\n  .active {\r\n    opacity: 0.1;\r\n  }\r\n`;\r\n\r\nexport default StyledPlaylistItem;","import React from 'react';\r\nimport StyledPlaylistItem from './styles/StyledPlaylistItem'\r\n\r\nconst PlaylistItem = ({ video, active, played }) => (\r\n    <StyledPlaylistItem active={active} played={played}>\r\n        <div className=\"wbn-player__video-nr\">{video.num}</div>\r\n        <div className=\"wbn-player__video-name\">{video.title}</div>\r\n        <div className=\"wbn-player__video-time\">{video.duration}</div>\r\n    </StyledPlaylistItem>\r\n\r\n);\r\n\r\nexport default PlaylistItem;","import styled from 'styled-components';\r\n\r\nconst StyledPlaylistItems = styled.div`\r\n    padding: 0 20px;\r\n    overflow-y: auto;\r\n    height: 28vw;\r\n    max-height: 500px;\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 5px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n        background: transparent;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #888;\r\n        border-radious: 2px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb:hover {\r\n        background: #555;\r\n    }\r\n\r\n`;\r\n\r\nexport default StyledPlaylistItems;","import React from 'react';\r\nimport PlaylistItem from '../PlaylistItem';\r\nimport StyledPlaylistItems from '../styles/StyledPlaylistItems';\r\n\r\nconst PlaylistItems = ({videos, active}) => (\r\n    <StyledPlaylistItems>\r\n        {videos.map(video => (\r\n        \t<PlaylistItem\r\n        \tkey = {video.id}\r\n        \tvideo = {video}\r\n        \tactive = {video.id === active.id ? true : false}\r\n        \tplayed = {video.played}\r\n        \t/>\r\n        ))}\r\n    </StyledPlaylistItems>\r\n);      \r\n\r\nexport default PlaylistItems;","import styled from \"styled-components\";\r\n\r\nconst StyledNightmode = styled.div`\r\n  font-family: \"Hind\", sans-serif;\r\n  font-weight: 800;\r\n  font-size: 1.6em;\r\n  color: ${props => props.theme.color};\r\n  padding: 0;\r\n  margin: 20px;\r\n\r\n  /* CSS taken from https://www.w3schools.com/howto/howto_css_switch.asp */\r\n  /* The switch - the box around the slider */\r\n  .switch {\r\n    position: relative;\r\n    display: inline-block;\r\n    width: 40px;\r\n    height: 24px;\r\n  }\r\n\r\n  /* Hide default HTML checkbox */\r\n  .switch input {\r\n    opacity: 0;\r\n    width: 0;\r\n    height: 0;\r\n  }\r\n\r\n  /* The slider */\r\n  .slider {\r\n    position: absolute;\r\n    cursor: pointer;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: #ccc;\r\n    -webkit-transition: 0.4s;\r\n    transition: 0.4s;\r\n  }\r\n\r\n  .slider:before {\r\n    position: absolute;\r\n    content: \"\";\r\n    height: 16px;\r\n    width: 16px;\r\n    left: 4px;\r\n    bottom: 4px;\r\n    background-color: white;\r\n    -webkit-transition: 0.4s;\r\n    transition: 0.4s;\r\n  }\r\n\r\n  input:checked + .slider {\r\n    background-color: #3d5138;\r\n  }\r\n\r\n  input:focus + .slider {\r\n    box-shadow: 0 0 1px #2196f3;\r\n  }\r\n\r\n  input:checked + .slider:before {\r\n    -webkit-transform: translateX(16px);\r\n    -ms-transform: translateX(16px);\r\n    transform: translateX(16px);\r\n  }\r\n\r\n  /* Rounded sliders */\r\n  .slider.round {\r\n    border-radius: 30px;\r\n  }\r\n\r\n  .slider.round:before {\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nexport default StyledNightmode;","import React from 'react';\r\nimport StyledNightMode from './styles/StyledNightMode';\r\n\r\nconst Nightmode = ({ nightModeCallback, nightMode }) => (\r\n    <StyledNightMode>\r\n        <span>Nightmode: </span>\r\n        <label className=\"switch\">\r\n            <input type=\"checkbox\" checked={nightMode} onChange={nightModeCallback} />\r\n            <span className=\"slider round\" />\r\n        </label>\r\n    </StyledNightMode>\r\n\r\n);\r\n\r\nexport default Nightmode;","import styled from 'styled-components';\r\n\r\nconst StyledPlaylist = styled.div`\r\n\t-webkit-box-flex: 1;\r\n  \t-ms-flex: 1 1 450px;\r\n    flex: 1 1 450px;\r\n    overflow: hidden;\r\n    color: white;\r\n\r\n    @media screen and (max-width: 1400px){\r\n        width: 100%\r\n        display: block;\r\n    }\r\n\r\n`;\r\n\r\nexport default StyledPlaylist;","import React from 'react';\r\nimport PlaylistHeader from '../PlaylistHeader';\r\nimport PlaylistItems from '../containers/PlaylistItems';\r\nimport Nightmode from '../Nightmode';\r\nimport StyledPlaylist from '../styles/StyledPlaylist';\r\n\r\nconst Playlist = ({videos, active, nightModeCallback, nightMode}) => (\r\n        <StyledPlaylist>\r\n            <Nightmode nightModeCallback={nightModeCallback} nightMode={nightMode}/>\r\n            <PlaylistHeader active={active} total={videos.length}/>\r\n            <PlaylistItems videos={videos} active={active}/>\r\n        </StyledPlaylist>\r\n);\r\n\r\nexport default Playlist;","import styled from 'styled-components';\r\n\r\nconst StyledWbnPlayer = styled.div`\r\n    background: ${props => props.theme.bgcolor};\r\n    border: ${props => props.theme.border};\r\n    max-width: 1800px;\r\n    margin: 0 auto;\r\n    display: -webkit-box;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    flex-direction: row;\r\n    max-height: 863px;\r\n    transition: all 0.5s ease;\r\n\r\n    @media screen and (max-width: 1400px){\r\n        display: block;\r\n        max-height: 1000px;\r\n    }\r\n`;\r\n\r\nexport default StyledWbnPlayer;","import React , { useState , useEffect } from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport Video from '../Video';\r\nimport Playlist from '../containers/Playlist';\r\nimport StyledWbnPlayer from '../styles/StyledWbnPlayer';\r\n\r\nconst theme = {\r\n    bgcolor : \"#353535;\",\r\n    bgcolorItem : \"#414141\",\r\n    bgcolorItemActive : \"#405c63\",\r\n    bgcolorPlayed : \"#526d4e\",\r\n    border : \"none\",\r\n    borderPlayed : \"none\",\r\n    color : \"#fff\",\r\n}\r\n\r\nconst themeLight = {\r\n    bgcolor : \"#fff;\",\r\n    bgcolorItem : \"#fff\",\r\n    bgcolorItemActive : \"#80a7b1\",\r\n    bgcolorPlayed : \"#7d9979\",\r\n    border : \"1px solid #353535\",\r\n    borderPlayed : \"none\",\r\n    color : \"#353535\",\r\n}\r\n\r\nconst WbnPlayer = ({ match, history, location}) => {\r\n\r\n    const videos = JSON.parse(document.querySelector('[name=\"videos\"]').value);\r\n\r\n    const [state, setState] = useState({\r\n        videos: videos.playlist,\r\n        activeVideo: videos.playlist[0],\r\n        nightMode: true,\r\n        playlistId: videos.playlistId,\r\n        autoplay: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        const videoId = match.params.activeVideo;\r\n        if (videoId != undefined) {\r\n          const newActiveVideo = state.videos.findIndex(\r\n            video => video.id === videoId,\r\n          );\r\n          setState(prev => ({\r\n            ...prev,\r\n            activeVideo: prev.videos[newActiveVideo],\r\n            autoplay: location.autoplay,\r\n          }));\r\n        } else {\r\n          history.push({\r\n            pathname: `/${state.activeVideo.id}`,\r\n            autoplay: false,\r\n          });\r\n        }    \r\n    }, [\r\n        history,\r\n        location.autoplay,\r\n        match.params.activeVideo,\r\n        state.activeVideo.id,\r\n        state.videos,\r\n    ]);\r\n\r\n    const nightModeCallback = () => {\r\n        setState(prevState => ({ ...prevState, nightMode: !prevState.nightMode }));\r\n    }\r\n\r\n    const endCallback = () => {\r\n\r\n    }\r\n\r\n    const progressCallback = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={state.nightMode ? theme : themeLight}>\r\n            {state.videos !== null ? (\r\n            <StyledWbnPlayer>\r\n                <Video\r\n                    active={state.activeVideo}\r\n                    autoplay={state.autoplay}\r\n                    endCallback={endCallback}\r\n                    progressCallback={progressCallback}\r\n                    />\r\n                <Playlist\r\n                    videos={state.videos}\r\n                    active={state.activeVideo}\r\n                    nightModeCallback={nightModeCallback}\r\n                    nightMode={state.nightMode}/>\r\n            </StyledWbnPlayer>\r\n                ) : null}\r\n        </ThemeProvider>\r\n        \r\n    )\r\n};\r\n\r\nexport default WbnPlayer;","import {createGlobalStyle} from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n    body {\r\n        font-size: 15px;\r\n        font-family: 'Roboto Mono', monospace;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;","import React from 'react';\nimport WbnPlayer from './WbnPlayer';\nimport { BrowserRouter, Route, Switch} from 'react-router-dom';\nimport GlobalStyle from '../styles/GlobalStyle';\n//import logo from './logo.svg'; <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\nconst App = () => (\n  <BrowserRouter>\n  <>\n    <Switch>\n      <Route exact path=\"/\" component={WbnPlayer}/>\n      <Route exact path=\"/:activeVideo\" component={WbnPlayer}/>\n    </Switch>\n    <GlobalStyle/>\n  </>\n  </BrowserRouter>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}